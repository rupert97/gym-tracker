---
import nutritionData from '../data/nutrition_plan.json';

const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
const dayKeys = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];
const meals = [
    { id: 'breakfast', name: 'Breakfast', icon: '🌅' },
    { id: 'morning_snack', name: 'Morning Snack', icon: '☕' },
    { id: 'lunch', name: 'Lunch', icon: '☀️' },
    { id: 'afternoon_snack', name: 'Afternoon Snack', icon: '🍎' },
    { id: 'dinner', name: 'Dinner', icon: '🌙' }
];

// Function to calculate totals for a meal
function calculateMealTotals(mealData) {
    if (!mealData || !mealData.items) return { calories: 0, protein: 0, carbs: 0, fat: 0 };

    return mealData.items.reduce((totals, item) => ({
        calories: totals.calories + (item.calories || 0),
        protein: totals.protein + (item.protein || 0),
        carbs: totals.carbs + (item.carbs || 0),
        fat: totals.fat + (item.fat || 0)
    }), { calories: 0, protein: 0, carbs: 0, fat: 0 });
}
---

<div class="space-y-6">
    <!-- Day Selector -->
    <div>
        <label class="block text-sm font-medium text-gray-700 mb-2">Day of the week</label>
        <select id="day-selector" class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent bg-white text-gray-900">
            {days.map((day, index) => (
                    <option value={dayKeys[index]} selected={index === new Date().getDay() - 1}>{day}</option>
            ))}
        </select>
    </div>

    <!-- Meals List -->
    <div id="meals-container" class="space-y-4">
        {meals.map(meal => (
                <div class="meal-card bg-white rounded-lg border border-gray-200 overflow-hidden" data-meal={meal.id}>
                    <button class="meal-header w-full p-4 text-left flex items-center justify-between hover:bg-gray-50 transition-colors">
                        <div class="flex items-center space-x-3">
                            <span class="text-2xl">{meal.icon}</span>
                            <div>
                                <h3 class="font-medium text-gray-900">{meal.name}</h3>
                                <p class="meal-calories text-sm text-gray-600">0 calories</p>
                            </div>
                        </div>
                        <div class="flex items-center space-x-2">
                            <div class="text-right text-xs text-gray-500">
                                <div class="meal-macros">P: 0g | C: 0g | F: 0g</div>
                            </div>
                            <svg class="w-5 h-5 text-gray-400 transform transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </div>
                    </button>

                    <div class="meal-content hidden p-4 border-t border-gray-200 bg-gray-50">
                        <div class="space-y-4">
                            <!-- Food Items -->
                            <div>
                                <h4 class="text-sm font-medium text-gray-700 mb-3">Food Items</h4>
                                <div class="food-items space-y-2">
                                    <!-- Items will be populated by JavaScript -->
                                </div>
                            </div>

                            <!-- Ingredients -->
                            <div>
                                <h4 class="text-sm font-medium text-gray-700 mb-3">Ingredients</h4>
                                <div class="ingredients-list space-y-1">
                                    <!-- Ingredients will be populated by JavaScript -->
                                </div>
                            </div>

                            <!-- Detailed Nutrition Summary -->
                            <div class="mt-4 p-4 bg-white rounded-lg border border-gray-200">
                                <h4 class="text-sm font-medium text-gray-900 mb-3">Nutritional Summary</h4>
                                <div class="grid grid-cols-2 gap-4 text-sm">
                                    <div class="flex justify-between">
                                        <span class="text-gray-600">Calories:</span>
                                        <span class="font-medium text-gray-900 meal-total-calories">0 kcal</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span class="text-gray-600">Protein:</span>
                                        <span class="font-medium text-gray-900 meal-total-protein">0g</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span class="text-gray-600">Carbs:</span>
                                        <span class="font-medium text-gray-900 meal-total-carbs">0g</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span class="text-gray-600">Fat:</span>
                                        <span class="font-medium text-gray-900 meal-total-fat">0g</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
        ))}
    </div>

    <!-- Daily Totals -->
    <div class="bg-gradient-to-r from-green-500 to-blue-500 rounded-xl shadow-lg p-6 text-white">
        <h3 class="text-lg font-semibold mb-4">Daily Totals</h3>
        <div class="grid grid-cols-2 gap-4">
            <div class="text-center">
                <div id="daily-calories" class="text-2xl font-bold">0</div>
                <div class="text-sm opacity-90">Calories</div>
            </div>
            <div class="text-center">
                <div id="daily-protein" class="text-2xl font-bold">0g</div>
                <div class="text-sm opacity-90">Protein</div>
            </div>
            <div class="text-center">
                <div id="daily-carbs" class="text-2xl font-bold">0g</div>
                <div class="text-sm opacity-90">Carbs</div>
            </div>
            <div class="text-center">
                <div id="daily-fat" class="text-2xl font-bold">0g</div>
                <div class="text-sm opacity-90">Fat</div>
            </div>
        </div>
    </div>
</div>

<script define:vars={{ nutritionData, meals }}>
    let currentDay = 'monday';

    // Initialize with current day
    const daySelector = document.getElementById('day-selector');
    const today = new Date().getDay();
    const dayKeys = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];
    currentDay = dayKeys[today] || 'monday';

    if (daySelector) {
        daySelector.value = currentDay;
    }

    function updateMealDisplay() {
        const dayData = nutritionData[currentDay];
        if (!dayData) return;

        // Use pre-calculated daily totals from JSON
        const dailyTotals = dayData.day_total || { calories: 0, protein: 0, carbs: 0, fat: 0 };

        meals.forEach(meal => {
            const mealData = dayData[meal.id];
            const mealCard = document.querySelector(`[data-meal="${meal.id}"]`);

            if (!mealCard || !mealData) return;

            // Use pre-calculated meal totals from JSON
            const totals = mealData.meal_total || { calories: 0, protein: 0, carbs: 0, fat: 0 };

            // Update meal header
            const caloriesElement = mealCard.querySelector('.meal-calories');
            const macrosElement = mealCard.querySelector('.meal-macros');

            if (caloriesElement) {
                caloriesElement.textContent = `${totals.calories} calories`;
            }

            if (macrosElement) {
                macrosElement.textContent = `P: ${totals.protein}g | C: ${totals.carbs}g | F: ${totals.fat}g`;
            }

            // Update food items
            const foodItemsContainer = mealCard.querySelector('.food-items');
            if (foodItemsContainer && mealData.items) {
                foodItemsContainer.innerHTML = mealData.items.map(item => `
          <div class="flex justify-between items-center p-3 bg-white rounded border border-gray-200">
            <div class="flex-1">
              <div class="font-medium text-gray-900 text-sm">${item.name}</div>
              <div class="text-xs text-gray-500">
                ${item.calories} kcal | P: ${item.protein}g | C: ${item.carbs}g | F: ${item.fat}g
              </div>
            </div>
          </div>
        `).join('');
            }

            // Update ingredients
            const ingredientsContainer = mealCard.querySelector('.ingredients-list');
            if (ingredientsContainer && mealData.ingredients) {
                ingredientsContainer.innerHTML = mealData.ingredients.map(ingredient => `
          <div class="flex items-center space-x-2 text-sm text-gray-600">
            <span class="w-2 h-2 bg-green-500 rounded-full"></span>
            <span>${ingredient.quantity} ${ingredient.name}</span>
          </div>
        `).join('');
            }

            // Update detailed nutrition summary with pre-calculated totals
            const totalCalories = mealCard.querySelector('.meal-total-calories');
            const totalProtein = mealCard.querySelector('.meal-total-protein');
            const totalCarbs = mealCard.querySelector('.meal-total-carbs');
            const totalFat = mealCard.querySelector('.meal-total-fat');

            if (totalCalories) totalCalories.textContent = `${totals.calories} kcal`;
            if (totalProtein) totalProtein.textContent = `${totals.protein}g`;
            if (totalCarbs) totalCarbs.textContent = `${totals.carbs}g`;
            if (totalFat) totalFat.textContent = `${totals.fat}g`;
        });

        // Update daily totals with pre-calculated values
        const dailyCaloriesEl = document.getElementById('daily-calories');
        const dailyProteinEl = document.getElementById('daily-protein');
        const dailyCarbsEl = document.getElementById('daily-carbs');
        const dailyFatEl = document.getElementById('daily-fat');

        if (dailyCaloriesEl) dailyCaloriesEl.textContent = Math.round(dailyTotals.calories);
        if (dailyProteinEl) dailyProteinEl.textContent = `${Math.round(dailyTotals.protein)}g`;
        if (dailyCarbsEl) dailyCarbsEl.textContent = `${Math.round(dailyTotals.carbs)}g`;
        if (dailyFatEl) dailyFatEl.textContent = `${Math.round(dailyTotals.fat)}g`;
    }

    // Day selector change event
    daySelector?.addEventListener('change', (e) => {
        currentDay = e.target.value;
        updateMealDisplay();
    });

    // Toggle meal sections
    document.querySelectorAll('.meal-header').forEach(header => {
        header.addEventListener('click', () => {
            const content = header.nextElementSibling;
            const arrow = header.querySelector('svg');

            content?.classList.toggle('hidden');
            arrow?.classList.toggle('rotate-180');
        });
    });

    // Initialize display
    updateMealDisplay();
</script>
