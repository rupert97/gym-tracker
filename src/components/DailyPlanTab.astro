---
const days = ['Lunes', 'Martes', 'Mi√©rcoles', 'Jueves', 'Viernes', 'S√°bado', 'Domingo'];
const meals = [
    { id: 'desayuno', name: 'Desayuno', icon: 'üåÖ' },
    { id: 'almuerzo', name: 'Almuerzo', icon: '‚òÄÔ∏è' },
    { id: 'cena', name: 'Cena', icon: 'üåô' },
    { id: 'snacks', name: 'Snacks', icon: 'üçé' }
];
---

<div class="space-y-6">
    <!-- Day Selector -->
    <div>
        <label class="block text-sm font-medium text-gray-700 mb-2">D√≠a de la semana</label>
        <select id="day-selector" class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent">
            {days.map((day, index) => (
                    <option value={index} selected={index === new Date().getDay() - 1}>{day}</option>
            ))}
        </select>
    </div>

    <!-- Meals List -->
    <div class="space-y-4">
        {meals.map(meal => (
                <div class="bg-white rounded-lg border border-gray-200 overflow-hidden">
                    <button class="meal-header w-full p-4 text-left flex items-center justify-between hover:bg-gray-50" data-meal={meal.id}>
                        <div class="flex items-center space-x-3">
                            <span class="text-2xl">{meal.icon}</span>
                            <div>
                                <h3 class="font-medium text-gray-900">{meal.name}</h3>
                                <p class="text-sm text-gray-600">0 calor√≠as</p>
                            </div>
                        </div>
                        <svg class="w-5 h-5 text-gray-400 transform transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                        </svg>
                    </button>

                    <div class="meal-content hidden p-4 border-t border-gray-200 bg-gray-50">
                        <div class="space-y-3">
                            <div class="flex items-center justify-between">
                                <span class="text-sm font-medium text-gray-700">Alimentos</span>
                                <button class="add-food-btn text-green-600 text-sm hover:text-green-800" data-meal={meal.id}>
                                    + Agregar alimento
                                </button>
                            </div>

                            <div class="food-list space-y-2">
                                <!-- Foods will be added here -->
                            </div>

                            <!-- Nutrition Summary -->
                            <div class="mt-4 p-3 bg-white rounded border">
                                <h4 class="text-sm font-medium text-gray-900 mb-2">Resumen nutricional</h4>
                                <div class="grid grid-cols-2 gap-4 text-xs">
                                    <div>
                                        <span class="text-gray-600">Calor√≠as:</span>
                                        <span class="font-medium ml-1">0 kcal</span>
                                    </div>
                                    <div>
                                        <span class="text-gray-600">Prote√≠nas:</span>
                                        <span class="font-medium ml-1">0g</span>
                                    </div>
                                    <div>
                                        <span class="text-gray-600">Carbohidratos:</span>
                                        <span class="font-medium ml-1">0g</span>
                                    </div>
                                    <div>
                                        <span class="text-gray-600">Grasas:</span>
                                        <span class="font-medium ml-1">0g</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
        ))}
    </div>
</div>

<script>
    // Toggle meal sections
    document.querySelectorAll('.meal-header').forEach(header => {
        header.addEventListener('click', () => {
            const content = header.nextElementSibling;
            const arrow = header.querySelector('svg');

            content?.classList.toggle('hidden');
            arrow?.classList.toggle('rotate-180');
        });
    });

    // Add food functionality
    document.querySelectorAll('.add-food-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
            e.stopPropagation();
            const mealId = btn.dataset.meal;
            const foodList = btn.closest('.meal-content')?.querySelector('.food-list');

            const foodDiv = document.createElement('div');
            foodDiv.className = 'flex items-center space-x-2 p-2 bg-white rounded border';
            foodDiv.innerHTML = `
        <input type="text" placeholder="Nombre del alimento" class="flex-1 p-2 border border-gray-300 rounded text-sm">
        <input type="number" placeholder="Cantidad" class="w-20 p-2 border border-gray-300 rounded text-sm">
        <input type="number" placeholder="Cal" class="w-16 p-2 border border-gray-300 rounded text-sm">
        <button class="text-red-500 hover:text-red-700 text-sm" onclick="this.parentElement.remove()">√ó</button>
      `;

            foodList?.appendChild(foodDiv);
        });
    });
</script>
