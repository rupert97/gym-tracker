---
import weeklyShoppingData from '../data/weekly_shopping_list.json';
import monthlyShoppingData from '../data/monthly_shopping_list.json';

// Function to categorize shopping items
function categorizeShoppingItems(shoppingData) {
    const categories = {
        vegetables: { name: 'Vegetables & Fruits', icon: '🥬', items: [] },
        meats: { name: 'Meats & Fish', icon: '🥩', items: [] },
        dairy: { name: 'Dairy Products', icon: '🥛', items: [] },
        grains: { name: 'Grains & Cereals', icon: '🌾', items: [] },
        others: { name: 'Others', icon: '🛒', items: [] }
    };

    const vegetableKeywords = ['tomate', 'cebolla', 'lechuga', 'zanahoria', 'aguacate', 'verduras', 'banano', 'manzana', 'mandarina', 'fruta', 'papaya', 'piña', 'guayaba', 'mango', 'naranja', 'limón', 'cilantro', 'champiñones', 'remolacha', 'repollo', 'plátano', 'espinaca', 'maíz', 'papa', 'ensalada', 'habichuela', 'nueces'];
    const meatKeywords = ['pollo', 'carne', 'huevo', 'jamón', 'costilla', 'proteína'];
    const dairyKeywords = ['leche', 'queso', 'yogur', 'mantequilla', 'cuajada'];
    const grainKeywords = ['arroz', 'avena', 'pan', 'arepa', 'lentejas', 'fríjoles', 'almojábana', 'pasta', 'tortilla', 'wrap', 'maní'];

    // Process all categories of items
    ['by_unit', 'by_weight', 'by_volume'].forEach(category => {
        if (shoppingData[category]) {
            shoppingData[category].forEach(item => {
                const name = item.name.toLowerCase();
                let quantity = '';

                // Format quantity based on category
                if (category === 'by_unit') {
                    quantity = `${item.quantity} units`;
                } else if (category === 'by_weight') {
                    quantity = `${item.quantity_g}g`;
                } else if (category === 'by_volume') {
                    quantity = `${item.quantity_ml}ml`;
                }

                const shoppingItem = {
                    name: item.name,
                    quantity: quantity,
                    category: category
                };

                if (vegetableKeywords.some(keyword => name.includes(keyword))) {
                    categories.vegetables.items.push(shoppingItem);
                } else if (meatKeywords.some(keyword => name.includes(keyword))) {
                    categories.meats.items.push(shoppingItem);
                } else if (dairyKeywords.some(keyword => name.includes(keyword))) {
                    categories.dairy.items.push(shoppingItem);
                } else if (grainKeywords.some(keyword => name.includes(keyword))) {
                    categories.grains.items.push(shoppingItem);
                } else {
                    categories.others.items.push(shoppingItem);
                }
            });
        }
    });

    return categories;
}

const weeklyCategorizedItems = categorizeShoppingItems(weeklyShoppingData);
const monthlyCategorizedItems = categorizeShoppingItems(monthlyShoppingData);

// Calculate total items
const weeklyTotalItems = weeklyShoppingData.by_unit.length + weeklyShoppingData.by_weight.length + weeklyShoppingData.by_volume.length;
const monthlyTotalItems = monthlyShoppingData.by_unit.length + monthlyShoppingData.by_weight.length + monthlyShoppingData.by_volume.length;
---

<div class="space-y-6">
    <!-- Period Tabs -->
    <div class="bg-white border border-gray-200 rounded-lg overflow-hidden">
        <div class="flex">
            <button id="weekly-tab" class="flex-1 py-3 px-4 text-center font-medium text-blue-600 border-b-2 border-blue-600 bg-blue-50">
                Weekly
            </button>
            <button id="monthly-tab" class="flex-1 py-3 px-4 text-center font-medium text-gray-600 hover:text-gray-900">
                Monthly
            </button>
        </div>
    </div>

    <!-- Weekly Content -->
    <div id="weekly-content" class="space-y-4">
        <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
            <h3 class="text-lg font-semibold text-blue-900 mb-2">Weekly Shopping List</h3>
            <p class="text-sm text-blue-700">All ingredients needed for this week's meal plan</p>
            <div class="mt-2 text-sm text-blue-600">
                <span class="font-medium">{weeklyTotalItems} total items</span>
            </div>
        </div>

        {Object.entries(weeklyCategorizedItems).map(([categoryKey, category]) => (
            category.items.length > 0 && (
                    <div class="bg-white rounded-lg border border-gray-200 overflow-hidden">
                        <button class="category-header w-full p-4 text-left flex items-center justify-between hover:bg-gray-50 transition-colors" data-category={categoryKey}>
                            <div class="flex items-center space-x-3">
                                <span class="text-2xl">{category.icon}</span>
                                <div>
                                    <h3 class="font-medium text-gray-900">{category.name}</h3>
                                    <p class="text-sm text-gray-600">{category.items.length} items</p>
                                </div>
                            </div>
                            <svg class="w-5 h-5 text-gray-400 transform transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>

                        <div class="category-content hidden p-4 border-t border-gray-200 bg-gray-50">
                            <div class="space-y-2">
                                {category.items.map(item => (
                                        <div class="flex items-center space-x-3 p-3 bg-white rounded border border-gray-200">
                                            <input type="checkbox" class="w-4 h-4 text-green-600 rounded">
                                            <div class="flex-1">
                                                <span class="font-medium text-gray-900">{item.name}</span>
                                                <div class="text-sm text-gray-600">
                                                    {item.quantity}
                                                </div>
                                            </div>
                                        </div>
                                ))}
                            </div>
                        </div>
                    </div>
            )
        ))}
    </div>

    <!-- Monthly Content -->
    <div id="monthly-content" class="space-y-4 hidden">
        <div class="bg-green-50 border border-green-200 rounded-lg p-4">
            <h3 class="text-lg font-semibold text-green-900 mb-2">Monthly Shopping List</h3>
            <p class="text-sm text-green-700">All ingredients needed for 4 weeks (monthly meal plan)</p>
            <div class="mt-2 text-sm text-green-600">
                <span class="font-medium">{monthlyTotalItems} total items</span>
            </div>
        </div>

        {Object.entries(monthlyCategorizedItems).map(([categoryKey, category]) => (
            category.items.length > 0 && (
                    <div class="bg-white rounded-lg border border-gray-200 overflow-hidden">
                        <button class="category-header-monthly w-full p-4 text-left flex items-center justify-between hover:bg-gray-50 transition-colors" data-category={categoryKey}>
                            <div class="flex items-center space-x-3">
                                <span class="text-2xl">{category.icon}</span>
                                <div>
                                    <h3 class="font-medium text-gray-900">{category.name}</h3>
                                    <p class="text-sm text-gray-600">{category.items.length} items</p>
                                </div>
                            </div>
                            <svg class="w-5 h-5 text-gray-400 transform transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>

                        <div class="category-content-monthly hidden p-4 border-t border-gray-200 bg-gray-50">
                            <div class="space-y-2">
                                {category.items.map(item => (
                                        <div class="flex items-center space-x-3 p-3 bg-white rounded border border-gray-200">
                                            <input type="checkbox" class="w-4 h-4 text-green-600 rounded">
                                            <div class="flex-1">
                                                <span class="font-medium text-gray-900">{item.name}</span>
                                                <div class="text-sm text-gray-600">
                                                    {item.quantity}
                                                </div>
                                            </div>
                                        </div>
                                ))}
                            </div>
                        </div>
                    </div>
            )
        ))}
    </div>

    <!-- Summary Cards -->
    <div class="grid grid-cols-2 gap-4">
        <div class="bg-white rounded-lg border border-gray-200 p-4 text-center">
            <div class="text-2xl font-bold text-blue-600">{weeklyTotalItems}</div>
            <div class="text-sm text-gray-600">Weekly Items</div>
        </div>
        <div class="bg-white rounded-lg border border-gray-200 p-4 text-center">
            <div class="text-2xl font-bold text-green-600">{monthlyTotalItems}</div>
            <div class="text-sm text-gray-600">Monthly Items</div>
        </div>
    </div>

    <!-- Shopping Tips -->
    <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
        <h4 class="text-sm font-medium text-yellow-800 mb-2">💡 Shopping Tips</h4>
        <ul class="text-xs text-yellow-700 space-y-1">
            <li>• Check your pantry before shopping to avoid duplicates</li>
            <li>• Buy fresh produce closer to consumption dates</li>
            <li>• Consider buying protein in bulk and freezing portions</li>
            <li>• Store grains and cereals in airtight containers</li>
        </ul>
    </div>
</div>

<script>
    // Tab switching functionality
    const weeklyTab = document.getElementById('weekly-tab');
    const monthlyTab = document.getElementById('monthly-tab');
    const weeklyContent = document.getElementById('weekly-content');
    const monthlyContent = document.getElementById('monthly-content');

    weeklyTab?.addEventListener('click', () => {
        // Update tab styles
        weeklyTab.classList.add('text-blue-600', 'border-blue-600', 'bg-blue-50');
        weeklyTab.classList.remove('text-gray-600');
        monthlyTab?.classList.add('text-gray-600');
        monthlyTab?.classList.remove('text-blue-600', 'border-blue-600', 'bg-blue-50');

        // Show/hide content
        weeklyContent?.classList.remove('hidden');
        monthlyContent?.classList.add('hidden');
    });

    monthlyTab?.addEventListener('click', () => {
        // Update tab styles
        monthlyTab.classList.add('text-blue-600', 'border-blue-600', 'bg-blue-50');
        monthlyTab.classList.remove('text-gray-600');
        weeklyTab?.classList.add('text-gray-600');
        weeklyTab?.classList.remove('text-blue-600', 'border-blue-600', 'bg-blue-50');

        // Show/hide content
        monthlyContent?.classList.remove('hidden');
        weeklyContent?.classList.add('hidden');
    });

    // Toggle category sections for weekly
    document.querySelectorAll('.category-header').forEach(header => {
        header.addEventListener('click', () => {
            const content = header.nextElementSibling;
            const arrow = header.querySelector('svg');

            content?.classList.toggle('hidden');
            arrow?.classList.toggle('rotate-180');
        });
    });

    // Toggle category sections for monthly
    document.querySelectorAll('.category-header-monthly').forEach(header => {
        header.addEventListener('click', () => {
            const content = header.nextElementSibling;
            const arrow = header.querySelector('svg');

            content?.classList.toggle('hidden');
            arrow?.classList.toggle('rotate-180');
        });
    });

    // Add functionality to check items off the list
    document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
        checkbox.addEventListener('change', (e) => {
            const itemDiv = e.target.closest('div');
            const itemName = itemDiv.querySelector('span');

            if (e.target.checked) {
                itemName.classList.add('line-through', 'text-gray-400');
                itemDiv.classList.add('opacity-60');
            } else {
                itemName.classList.remove('line-through', 'text-gray-400');
                itemDiv.classList.remove('opacity-60');
            }
        });
    });
</script>
